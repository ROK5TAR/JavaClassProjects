
import javafx.application.*;
import javafx.event.ActionEvent; //action for the button, text field
import javafx.event.EventHandler; //handler for the listener
import javafx.geometry.Pos; //access to alignment
import javafx.scene.Scene; //this access to the contents of the window
import javafx.scene.control.*; //components from JavaFX
import javafx.scene.text.Font; //access to Font style
import javafx.scene.text.FontWeight; //access to bold style
import javafx.scene.layout.*; //layout
import javafx.scene.paint.Color; //access to Color 
import javafx.stage.Stage; // show the scene
import java.text.*; //formatting the numbers

public class ShippingCalculator extends Application implements EventHandler<ActionEvent>
{
    
    //Create components (objects) to view in the window 
    TextField idTextField = new TextField();
    TextField poundsTextField = new TextField();
    TextField ouncesTextField = new TextField();
    Button calculateButton = new Button("  Submit  ");
    TextArea invoiceTextArea = new TextArea();
    ScrollPane outputScrollPane = new ScrollPane();
    Label totalPackagesLabel = new Label("                     ");
    Label totalChargesLabel = new Label("                    ");
    Label companyLabel = new Label("               ");
    Label programmerLabel = new Label ("");
    
    GridPane mainGridPane = new GridPane();
    //Create a font object, companyFont of Calibri, bold size 20
    Font companyFont = Font.font("Calibri",FontWeight.BOLD,20);
    
    int totalPackagesInteger; //Store total accumulated packages shipped
    float totalChargesFloat; //store total accumulated shipping charges
    
    public static void main(String[] args) //main method and launches the apllication
    {
        launch(args); //create object of class and ovveride start method
    }
    
    public ShippingCalculator() 
    {
        designClass(); //calls method
        addAction(); //calls method
        
    }
    
    public void designClass()
    {
        //Set the font and color to the company label
        companyLabel.setFont(companyFont);
        companyLabel.setTextFill(Color.GREEN);

        //set the preferences to the text area
        invoiceTextArea.setPrefRowCount(10);
        invoiceTextArea.setPrefColumnCount(100);

        //set the scroll pane to the invoice text area
        outputScrollPane.setContent(invoiceTextArea);
        outputScrollPane.setFitToWidth(true);
        
        //setting the width and height of paneScrollPane
        outputScrollPane.setPrefWidth(200);
        outputScrollPane.setPrefHeight(180);

        //Align all the components in the center
        mainGridPane.setAlignment(Pos.CENTER);
        
        //Create horizontal and vertical space between the components
        mainGridPane.setHgap(10);
        mainGridPane.setVgap(10);

        //add the components to the main pane
        mainGridPane.add(companyLabel,0,0,2,1);
        mainGridPane.add(new Label("Package ID"),0,1);
        mainGridPane.add(idTextField,1,1);
        mainGridPane.add(new Label("Weight (lb)"),0,2);
        mainGridPane.add(poundsTextField,1,2);
        mainGridPane.add(new Label("Weight (oz)"),0,3);
        mainGridPane.add(ouncesTextField,1,3);
        mainGridPane.add(calculateButton,0,4);
        mainGridPane.add(outputScrollPane,0,5,2,1);
        mainGridPane.add(new Label("Total Shipped Packages:"),0,6);
        mainGridPane.add(totalPackagesLabel,1,6);
        mainGridPane.add(new Label("Total Shipping Charges:"),0,7);
        mainGridPane.add(totalChargesLabel,1,7);
        mainGridPane.add(new Label("Programmed by:"),0,8);
        mainGridPane.add(programmerLabel,1,8);

    }
    
    public void addAction()
    {
    //add objects to setOnAction
    ouncesTextField.setOnAction(this);
    calculateButton.setOnAction(this);
    }
      
    public void handle (ActionEvent event)
    {
        //create local variables
        String idString;
        int poundsInteger, ouncesInteger, totalOuncesInteger;
        float shippingChargeFloat;
        final int OUNCES_PER_POUND = 16;
        final float SHIPPING_RATE_FLOAT = 0.18F;
        
        //Get the input from the user
        idString = idTextField.getText();
        poundsInteger = Integer.parseInt(poundsTextField.getText());
        ouncesInteger = Integer.parseInt(ouncesTextField.getText());

        //calculate the cost
        totalOuncesInteger = (poundsInteger * OUNCES_PER_POUND) + ouncesInteger;
        shippingChargeFloat = totalOuncesInteger * SHIPPING_RATE_FLOAT;

        // accumulate totals
        totalPackagesInteger++;
        totalChargesFloat += shippingChargeFloat;

        //format object for the cost and totals
        DecimalFormat currencyDecimalFormat = new DecimalFormat("$##0.00");

        //display the input and the output in the invoiceTextArea
        invoiceTextArea.appendText("Package ID          " + "Weight          " + "Shipping Charge\n");
        invoiceTextArea.appendText(idString + "                " + poundsInteger + "lb "+ ouncesInteger + "oz          " + 
            currencyDecimalFormat.format(shippingChargeFloat) + '\n');

        totalPackagesLabel.setText(""+ totalPackagesInteger);
        totalChargesLabel.setText(currencyDecimalFormat.format(totalChargesFloat));

        //clear the text fields and the set the focus
        idTextField.setText("");
        poundsTextField.setText("");
        ouncesTextField.setText("");
        idTextField.requestFocus();        
        
    }
    public void start(Stage primaryStage) 
    {    
        //Set the title in the title bar 
        primaryStage.setTitle("Shipping Calculator");
        
        //create an object Scene, scene with mainPane width of 200 and height at 550
        Scene scene= new Scene(mainGridPane, 300, 400);
        
        //set the scene in the primaryStage object
        primaryStage.setScene(scene);
        
        //make the primaryStage object visible
        primaryStage.show();
    }
}
